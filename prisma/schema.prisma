// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ExperienceBlock {
  id          Int                @id @default(autoincrement())
  companyName String
  imgPath     String
  imageAlt    String
  location    String
  periods     ExperiencePeriod[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ExperiencePeriod {
  id        Int      @id @default(autoincrement())
  position  String
  startDate DateTime
  endDate   DateTime

  experienceBlock   ExperienceBlock @relation(fields: [experienceBlockId], references: [id])
  experienceBlockId Int
}

model WorkItem {
  id           Int          @id @default(autoincrement())
  title        String
  description  String
  image        String
  menuId       Int
  menu         Menu         @relation(fields: [menuId], references: [id])
  links        Link[]
  technologies Technology[] @relation("WorkItemTechnologies")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Link {
  id         Int      @id @default(autoincrement())
  url        String
  label      String?
  imgPath    String?
  workItem   WorkItem @relation(fields: [workItemId], references: [id])
  workItemId Int
}

model Technology {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  iconPath  String
  workItems WorkItem[] @relation("WorkItemTechnologies")
}

model Menu {
  id        Int        @id @default(autoincrement())
  title     String
  link      String
  content   WorkItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
